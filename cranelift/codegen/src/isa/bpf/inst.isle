;; Instruction formats
(type MInst
  (enum
    ;; BPF_ALU (64 bits)

    ;; LD/ST
    (LdAbs
      (size Size)
      (imm Offset32))

    (LdInd
      (index Reg)
      (size Size)
      (imm Offset32))

    (LdDwImm
      (dst Reg)
      (imm Imm64))

    (LdX
      (dst Reg)
      (index Reg)
      (size Size)
      (offset Offset32))

    (StImm
      (value Imm64)
      (index Reg)
      (size Size)
      (offset Offset32))

    (StReg
      (value Reg)
      (index Reg)
      (size Size)
      (offset Offset32))

    ;; ALU Register/register
    (MovImm64
      (rd Reg)
      (imm Imm64))

    (AluRR
      (op AluOpcode)
      (rs Reg)
      (rd Reg))

    (AluRI
      (op AluOpcode)
      (rd Reg)
      (imm Imm64))

    ;; Alu 32 bit
    (AluRR32
      (op AluOpcode)
      (rs Reg)
      (rd Reg))

    (AluRI32
      (op AluOpcode)
      (rd Reg)
      (imm Imm64))

    ;; Jump
    (Jmp
      (label MachLabel))

    (JmpCondRR
      (cond JmpCond)
      (rs1 Reg)
      (rs2 Reg)
      (label MachLabel))

    (JmpCondRI
      (cond JmpCond)
      (rs Reg)
      (imm Imm64)
      (label MachLabel))

    (JmpCondRR32
      (cond JmpCond)
      (rs1 Reg)
      (rs2 Reg)
      (label MachLabel))

    (JmpCondRI32
      (cond JmpCond)
      (rs Reg)
      (imm Imm64)
      (label MachLabel))

    (Call
      (imm Imm64))

    (TailCall
      (imm Imm64))

    (Exit)

    ;; Mov with src == dst is a nop in linux kernel jitter
    (Nop)
  )
)

(type AluOpcode
  (enum
    (Add)
    (Sub)
    (Mul)
    (Div)
    (SDiv)
    (Or)
    (And)
    (Lsh)
    (Rsh)
    (Neg)
    (Mod)
    (SMod)
    (Xor)
    (Mov)
    (MovSx (size Size))
    (Arsh)
    (HToLe (size Size))
    (HToBe (size Size))
    (Bswap (size Size))
  )
)

(type Size
  (enum
    (Word)
    (HalfWord)
    (Byte)
    (DoubleWord)
  )
)

(type JmpCond
  (enum
    (Eq)
    (Ne)
    (Lt)
    (Le)
    (Gt)
    (Ge)
    (Slt)
    (Sle)
    (Sgt)
    (Sge)
    (Set)
  )
)