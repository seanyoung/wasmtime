;; Instruction formats
(type MInst
  (enum
    ;; BPF_ALU (64 bits)

    ;; LD/ST
    (LdAbs
      (ty Type)
      (imm Offset32))

    (LdInd
      (index WritableReg)
      (ty Type)
      (imm Offset32))

    (LdDwImm
      (dst WritableReg)
      (imm Imm64))

    (LdX
      (dst WritableReg)
      (index Reg)
      (ty Type)
      (offset Offset32))

    (StImm
      (value Imm64)
      (index Reg)
      (ty Type)
      (offset Offset32))

    (StReg
      (value Reg)
      (index Reg)
      (ty Type)
      (offset Offset32))

    ;; ALU Register/register
    (MovImm64
      (rd WritableReg)
      (imm Imm64))

    (AluRR
      (op AluOpcode)
      (rs Reg)
      (rd WritableReg))

    (AluRI
      (op AluOpcode)
      (rd WritableReg)
      (imm Imm64))

    (Le
      (ty Type)
      (rd WritableReg))

    (Be
      (ty Type)
      (rd WritableReg))
    
    (MovSignExtent
      (ty Type)
      (rs Reg)
      (rd WritableReg))

    (MovSignExtent32
      (ty Type)
      (rs Reg)
      (rd WritableReg))

    ;; Alu 32 bit
    (AluRR32
      (op AluOpcode)
      (rs Reg)
      (rd WritableReg))

    (AluRI32
      (op AluOpcode)
      (rd WritableReg)
      (imm Imm64))

    ;; Jump
    (Jmp
      (label MachLabel))

    (JmpCondRR
      (cond JmpCond)
      (rs1 Reg)
      (rs2 Reg)
      (label MachLabel))

    (JmpCondRI
      (cond JmpCond)
      (rs Reg)
      (imm Imm64)
      (label MachLabel))

    (JmpCondRR32
      (cond JmpCond)
      (rs1 Reg)
      (rs2 Reg)
      (label MachLabel))

    (JmpCondRI32
      (cond JmpCond)
      (rs Reg)
      (imm Imm64)
      (label MachLabel))

    (Call
      (imm Imm64))

    (TailCall
      (imm Imm64))

    (Exit)

    ;; A dummy use, useful to keep a value alive.
    (DummyUse
      (reg Reg))

    (Nop0)
    ;; Mov with src == dst is a nop in linux kernel jitter
    (Nop8)

    ;; A pseudo-instruction that captures register arguments in vregs.
    (Args
      (args VecArgPair))

    ;; A pseudo-instruction that moves vregs to return registers.
    (Rets
      (rets VecRetPair))

    ;; A sign- or zero-extend operation.
    (Extend
      (rd WritableReg)
      (rn Reg)
      (signed bool)
      (from_bits u8)
      (to_bits u8)))
)

(type AluOpcode
  (enum
    (Add)
    (Sub)
    (Mul)
    (Div)
    (SDiv)
    (Or)
    (And)
    (Lsh)
    (Rsh)
    (Neg)
    (Mod)
    (SMod)
    (Xor)
    (Mov)
    (Arsh)
  )
)

(type JmpCond
  (enum
    (Eq)
    (Ne)
    (Lt)
    (Le)
    (Gt)
    (Ge)
    (Slt)
    (Sle)
    (Sgt)
    (Sge)
    (Set)
  )
)